/*
https://gb.ru/lessons/309941/homework

Задача 60. 
1. Сформируйте трёхмерный массив из неповторяющихся двузначных чисел. 
2. Напишите программу, которая будет построчно выводить массив, добавляя индексы каждого элемента.

Пример: Массив размером 2 x 2 x 2
    66(0,0,0) 25(0,1,0)
    34(1,0,0) 41(1,1,0)
    27(0,0,1) 90(0,1,1)
    26(1,0,1) 55(1,1,1)

 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
 
namespace Mission60 // Решение успешно задачи написано за 30 минут итеративным подбором правильных запросов в IDE <AI CHAT GPT>
{
    internal class Program
    {
        static void Main() 
        {



            // Объявление трехмерного массива с размерностью 2x2x2
            int[,,] array3D = new int[2, 2, 2];

            // Создание генератора случайных чисел
            Random generator = new Random();

            // Внешний цикл перебирает индексы первого измерения массива (i = 0, i = 1)
            for (int i = 0; i < 2; i++)
            {
                // Средний цикл перебирает индексы второго измерения массива (j = 0, j = 1)
                for (int j = 0; j < 2; j++)
                {
                    // Внутренний цикл перебирает индексы третьего измерения массива (k = 0, k = 1)
                    for (int k = 0; k < 2; k++)
                    {
                        // Генерация случайного числа от 10 до 99 включительно
                        int randomNumber = generator.Next(10, 100);

                        // Присвоение сгенерированного числа текущему элементу массива
                        array3D[i, j, k] = randomNumber;
                    }
                }
            }

            // Вывод всех значений массива на консоль
            for (int i = 0; i < 2; i++)
            {
                for (int j = 0; j < 2; j++)
                {
                    for (int k = 0; k < 2; k++)
                    {
                        Console.WriteLine("array3D[{0},{1},{2}] = {3}", i, j, k, array3D[i, j, k]);
                    }
                }
            }




        }
    }
}
